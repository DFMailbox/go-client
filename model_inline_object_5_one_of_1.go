/*
DFMailbox API

DFMailbox is a decentralized way to send messages to other DiamondFire plots.

API version: 0.6.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InlineObject5OneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineObject5OneOf1{}

// InlineObject5OneOf1 struct for InlineObject5OneOf1
type InlineObject5OneOf1 struct {
	Type interface{} `json:"type"`
	Title interface{} `json:"title"`
	// HTTP status code
	Status int32 `json:"status"`
	Detail string `json:"detail"`
	// A base64 URL encoded ed25519 public key
	ExpectedPublicKey string `json:"expected_public_key"`
	// A base64 URL encoded ed25519 public key
	ActualPublicKey string `json:"actual_public_key"`
}

type _InlineObject5OneOf1 InlineObject5OneOf1

// NewInlineObject5OneOf1 instantiates a new InlineObject5OneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject5OneOf1(type_ interface{}, title interface{}, status int32, detail string, expectedPublicKey string, actualPublicKey string) *InlineObject5OneOf1 {
	this := InlineObject5OneOf1{}
	this.Type = type_
	this.Title = title
	this.Status = status
	this.Detail = detail
	this.ExpectedPublicKey = expectedPublicKey
	this.ActualPublicKey = actualPublicKey
	return &this
}

// NewInlineObject5OneOf1WithDefaults instantiates a new InlineObject5OneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject5OneOf1WithDefaults() *InlineObject5OneOf1 {
	this := InlineObject5OneOf1{}
	return &this
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *InlineObject5OneOf1) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject5OneOf1) GetTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *InlineObject5OneOf1) SetType(v interface{}) {
	o.Type = v
}

// GetTitle returns the Title field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *InlineObject5OneOf1) GetTitle() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *InlineObject5OneOf1) GetTitleOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *InlineObject5OneOf1) SetTitle(v interface{}) {
	o.Title = v
}

// GetStatus returns the Status field value
func (o *InlineObject5OneOf1) GetStatus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *InlineObject5OneOf1) GetStatusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *InlineObject5OneOf1) SetStatus(v int32) {
	o.Status = v
}

// GetDetail returns the Detail field value
func (o *InlineObject5OneOf1) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *InlineObject5OneOf1) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *InlineObject5OneOf1) SetDetail(v string) {
	o.Detail = v
}

// GetExpectedPublicKey returns the ExpectedPublicKey field value
func (o *InlineObject5OneOf1) GetExpectedPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExpectedPublicKey
}

// GetExpectedPublicKeyOk returns a tuple with the ExpectedPublicKey field value
// and a boolean to check if the value has been set.
func (o *InlineObject5OneOf1) GetExpectedPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpectedPublicKey, true
}

// SetExpectedPublicKey sets field value
func (o *InlineObject5OneOf1) SetExpectedPublicKey(v string) {
	o.ExpectedPublicKey = v
}

// GetActualPublicKey returns the ActualPublicKey field value
func (o *InlineObject5OneOf1) GetActualPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActualPublicKey
}

// GetActualPublicKeyOk returns a tuple with the ActualPublicKey field value
// and a boolean to check if the value has been set.
func (o *InlineObject5OneOf1) GetActualPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActualPublicKey, true
}

// SetActualPublicKey sets field value
func (o *InlineObject5OneOf1) SetActualPublicKey(v string) {
	o.ActualPublicKey = v
}

func (o InlineObject5OneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineObject5OneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	toSerialize["status"] = o.Status
	toSerialize["detail"] = o.Detail
	toSerialize["expected_public_key"] = o.ExpectedPublicKey
	toSerialize["actual_public_key"] = o.ActualPublicKey
	return toSerialize, nil
}

func (o *InlineObject5OneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"title",
		"status",
		"detail",
		"expected_public_key",
		"actual_public_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInlineObject5OneOf1 := _InlineObject5OneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInlineObject5OneOf1)

	if err != nil {
		return err
	}

	*o = InlineObject5OneOf1(varInlineObject5OneOf1)

	return err
}

type NullableInlineObject5OneOf1 struct {
	value *InlineObject5OneOf1
	isSet bool
}

func (v NullableInlineObject5OneOf1) Get() *InlineObject5OneOf1 {
	return v.value
}

func (v *NullableInlineObject5OneOf1) Set(val *InlineObject5OneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject5OneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject5OneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject5OneOf1(val *InlineObject5OneOf1) *NullableInlineObject5OneOf1 {
	return &NullableInlineObject5OneOf1{value: val, isSet: true}
}

func (v NullableInlineObject5OneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject5OneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


