/*
DFMailbox API

DFMailbox is a decentralized way to send messages to other DiamondFire plots.

API version: 0.7.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MailboxQueryResponseOneOf3 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MailboxQueryResponseOneOf3{}

// MailboxQueryResponseOneOf3 struct for MailboxQueryResponseOneOf3
type MailboxQueryResponseOneOf3 struct {
	Type interface{} `json:"type"`
	Msg SendItemsError `json:"msg"`
}

type _MailboxQueryResponseOneOf3 MailboxQueryResponseOneOf3

// NewMailboxQueryResponseOneOf3 instantiates a new MailboxQueryResponseOneOf3 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMailboxQueryResponseOneOf3(type_ interface{}, msg SendItemsError) *MailboxQueryResponseOneOf3 {
	this := MailboxQueryResponseOneOf3{}
	this.Type = type_
	this.Msg = msg
	return &this
}

// NewMailboxQueryResponseOneOf3WithDefaults instantiates a new MailboxQueryResponseOneOf3 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMailboxQueryResponseOneOf3WithDefaults() *MailboxQueryResponseOneOf3 {
	this := MailboxQueryResponseOneOf3{}
	return &this
}

// GetType returns the Type field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *MailboxQueryResponseOneOf3) GetType() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MailboxQueryResponseOneOf3) GetTypeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MailboxQueryResponseOneOf3) SetType(v interface{}) {
	o.Type = v
}

// GetMsg returns the Msg field value
func (o *MailboxQueryResponseOneOf3) GetMsg() SendItemsError {
	if o == nil {
		var ret SendItemsError
		return ret
	}

	return o.Msg
}

// GetMsgOk returns a tuple with the Msg field value
// and a boolean to check if the value has been set.
func (o *MailboxQueryResponseOneOf3) GetMsgOk() (*SendItemsError, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Msg, true
}

// SetMsg sets field value
func (o *MailboxQueryResponseOneOf3) SetMsg(v SendItemsError) {
	o.Msg = v
}

func (o MailboxQueryResponseOneOf3) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MailboxQueryResponseOneOf3) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	toSerialize["msg"] = o.Msg
	return toSerialize, nil
}

func (o *MailboxQueryResponseOneOf3) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMailboxQueryResponseOneOf3 := _MailboxQueryResponseOneOf3{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMailboxQueryResponseOneOf3)

	if err != nil {
		return err
	}

	*o = MailboxQueryResponseOneOf3(varMailboxQueryResponseOneOf3)

	return err
}

type NullableMailboxQueryResponseOneOf3 struct {
	value *MailboxQueryResponseOneOf3
	isSet bool
}

func (v NullableMailboxQueryResponseOneOf3) Get() *MailboxQueryResponseOneOf3 {
	return v.value
}

func (v *NullableMailboxQueryResponseOneOf3) Set(val *MailboxQueryResponseOneOf3) {
	v.value = val
	v.isSet = true
}

func (v NullableMailboxQueryResponseOneOf3) IsSet() bool {
	return v.isSet
}

func (v *NullableMailboxQueryResponseOneOf3) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMailboxQueryResponseOneOf3(val *MailboxQueryResponseOneOf3) *NullableMailboxQueryResponseOneOf3 {
	return &NullableMailboxQueryResponseOneOf3{value: val, isSet: true}
}

func (v NullableMailboxQueryResponseOneOf3) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMailboxQueryResponseOneOf3) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


